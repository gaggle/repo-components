{"version":3,"sources":["../../../src/components/gh/Language.js"],"names":["Language","Component","constructor","props","lookup","GithubColors","get","language","console","warn","Object","keys","colors","color","undefined","text","getLangText","ace_mode","render","PropTypes","string","isRequired","LANG_TEXTS","c_cpp","csharp","javascript"],"mappings":"4JAAA,mEACA,6DACA,qDACA,qE,8pBAEe,KAAMA,CAAAA,QAAN,QAAuBC,iBAAU,CAM9CC,WAAW,CAAEC,KAAF,CAAS,CAClB,MAAMA,KAAN,EACA,KAAMC,CAAAA,MAAM,CAAGC,sBAAaC,GAAb,CAAiBH,KAAK,CAACI,QAAvB,CAAf,CACA,GAAI,CAACH,MAAL,CAAa,CACXI,OAAO,CAACC,IAAR,CAAc,gCAA+BN,KAAK,CAACI,QAAS;mBAC/CG,MAAM,CAACC,IAAP,CAAYN,sBAAaO,MAAzB,CAAiC,EAD9C,CAED,CACD,KAAKC,KAAL,CAAaT,MAAM,CAAGA,MAAM,CAACS,KAAV,CAAkBC,SAArC,CACA,KAAKC,IAAL,CAAYC,WAAW,CAACZ,MAAM,CAAGA,MAAM,CAACa,QAAV,CAAqBd,KAAK,CAACI,QAAlC,CACxB,CAEDW,MAAM,EAAI,CACR,MACE,qEAAgB,gBAAhB,EACE,qCAAM,KAAK,CAAE,CAACL,KAAK,CAAE,KAAKA,KAAb,CAAb,gCAA4C,OAA5C,WADF,CAEE,oEAAgB,MAAhB,EAAwB,KAAKE,IAA7B,CAFF,k0EAeH,CAlC6C,C,yCAA3Bf,Q,aAEA,CACjBO,QAAQ,CAAEY,mBAAUC,MAAV,CAAiBC,UADV,C,EAmCrB,KAAMC,CAAAA,UAAU,CAAG,CACjBC,KAAK,CAAE,KADU,CAEjBC,MAAM,CAAE,IAFS,CAGjBC,UAAU,CAAE,KAHK,CAAnB,CAMA,QAAST,CAAAA,WAAT,CAAsBD,IAAtB,CAA4B,CAC1B,MAAOO,CAAAA,UAAU,CAACP,IAAD,CAAV,EAAoB,wBAAWA,IAAX,CAC5B","sourcesContent":["import GithubColors from 'github-colors'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport capitalize from 'lodash/capitalize'\n\nexport default class Language extends Component {\n\n  static propTypes = {\n    language: PropTypes.string.isRequired,\n  }\n\n  constructor (props) {\n    super(props)\n    const lookup = GithubColors.get(props.language)\n    if (!lookup) {\n      console.warn(`Could not identify language '${props.language}', \n      available: ${Object.keys(GithubColors.colors)}`)\n    }\n    this.color = lookup ? lookup.color : undefined\n    this.text = getLangText(lookup ? lookup.ace_mode : props.language)\n  }\n\n  render () {\n    return (\n      <span className=\"language-badge\">\n        <span style={{color: this.color}} className=\"color\">‚óè</span>\n        <span className=\"text\">{this.text}</span>\n        <style jsx=\"true\">{`\n          .language-badge {\n            display: inline-block;\n            white-space: nowrap;\n          }\n          .color {\n            cursor: default;\n            padding-right: 2px;\n          }\n        `}</style>\n      </span>\n    )\n  }\n}\n\nconst LANG_TEXTS = {\n  c_cpp: 'C++',\n  csharp: 'C#',\n  javascript: '.Js',\n}\n\nfunction getLangText (text) {\n  return LANG_TEXTS[text] || capitalize(text)\n}\n"],"file":"Language.js"}