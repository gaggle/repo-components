{"version":3,"sources":["../../src/lib/dates.js"],"names":["getDatetime","dateStr","datetime","Date","isValidDate","parseInt","Error","date","isNaN","parse"],"mappings":"sIAAO,QAASA,CAAAA,WAAT,CAAsBC,OAAtB,CAA+B,CACpC,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,IAAJ,CAASF,OAAT,CAAf,CACA,GAAI,CAACG,WAAW,CAACF,QAAD,CAAhB,CAA4B,CAC1BA,QAAQ,CAAG,GAAIC,CAAAA,IAAJ,CAASE,QAAQ,CAACJ,OAAD,CAAjB,CACZ,CAED,GAAI,CAACG,WAAW,CAACF,QAAD,CAAhB,CAA4B,CAC1B,KAAM,IAAII,CAAAA,KAAJ,CAAW,4BAA2BL,OAAQ,GAA9C,CACP,CAED,MAAOC,CAAAA,QACR,CAEM,QAASE,CAAAA,WAAT,CAAsBG,IAAtB,CAA4B,CACjC,MAAO,CAACC,KAAK,CAACL,IAAI,CAACM,KAAL,CAAWF,IAAX,CAAD,CACd","sourcesContent":["export function getDatetime (dateStr) {\n  let datetime = new Date(dateStr)\n  if (!isValidDate(datetime)) {\n    datetime = new Date(parseInt(dateStr))\n  }\n\n  if (!isValidDate(datetime)) {\n    throw new Error(`Cannot create date from '${dateStr}'`)\n  }\n\n  return datetime\n}\n\nexport function isValidDate (date) {\n  return !isNaN(Date.parse(date))\n}\n"],"file":"dates.js"}